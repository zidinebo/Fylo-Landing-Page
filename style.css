@import url("https://fonts.googleapis.com/css2?family=Raleway:ital,wght@0,100..900;1,100..900&display=swap");

@import url("https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Outfit:wght@100..900&family=Raleway:ital,wght@0,100..900;1,100..900&family=Ubuntu+Sans:ital,wght@0,100..800;1,100..800&family=Young+Serif&display=swap");

h1,
h2,
h3,
button,
.navbar a {
  font-family: "Raleway", sans-serif;
}

p,
a,
h5,
small {
  font-family: "Open Sans", sans-serif;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* ================================= */
/* ROOT is used to call out data from style guide and keep it here for easy access and usage */
:root {
  /* PRIMARY */
  --dark-blue-1: hsl(217, 28%, 15%);
  --dark-blue-2: hsl(218, 28%, 13%);
  --dark-blue-3: hsl(216, 53%, 9%);
  --dark-blue-4: hsl(219, 30%, 18%);

  /* ACCENT */
  --Cyan: hsl(176, 68%, 64%);
  --blue: hsl(198, 60%, 50%);
  --light-red: hsl(0, 100%, 63%);

  /* NEUTRAL */
  --white: hsl(0, 0%, 100%);
}
/* ===========NAV===================== */

body {
  background-color: var(--dark-blue-1);
  max-width: 1440px;
  margin: auto;
}

.navbar {
  display: flex;
  justify-content: space-between;
  /* var will use to call out all the colors we have defined inside the root */
  background-color: var(--dark-blue-1);
  align-items: center;
  padding: 60px;
}

.navbar div {
  display: flex;
  gap: 60px;
}
.navbar a {
  text-decoration: none;
  color: var(--white);
  font-size: 14px;
  font-weight: 400;
}

/* To hover, we call out the tag again and add hover as shown below. if weight or lining will be added, indicate */
.navbar a:hover {
  font-weight: 700;
  text-decoration: underline;
}

/* MEDIA QUERY FOR NAVBAR FROM 500PX TO 0PX */

@media (max-width: 500px) {
  .navbar img {
    width: 100px;
  }
  .navbar {
    padding: 20px;
  }
  .navbar div {
    gap: 20px;
  }
}

/* ==================SECTION=========================== */
.section1 {
  text-align: center;
  background-color: var(--dark-blue-1);
  position: relative;
}

.wavedesk {
  position: absolute;
  left: -2px;
  max-width: 1440px;
  width: 100%;
  /* To take up the full size on whatever screen it is on */
  bottom: -170px;
}
.wavemob {
  display: none;
}
.illu {
  margin: 20px auto;
  position: relative;
}

.section1 h1 {
  color: var(--white);
  font-size: 45px;
  /* margin: 0 200px; */
  /* max width is used to give the container a fixed width so as you zoom in or out, container retains same design. Margin auto centralizes it */
  max-width: 700px;
  margin: auto;
  line-height: 65px;
  margin-bottom: 30px;
  position: relative;
}

.section1 p {
  color: var(--white);
  max-width: 650px;
  margin: auto;
  font-size: 22px;
  line-height: 35px;
  position: relative;
}
.section1 button {
  background-color: var(--blue);
  color: var(--white);
  padding: 18px 100px;
  border-radius: 60px;
  font-size: 18px;
  border: none;
  margin-top: 30px;
  font-weight: 400;
  cursor: pointer;
  position: relative;
}
.section1 button:hover {
  background-color: var(--Cyan);
  font-weight: 700;
}

/* MEDIA QUERY FOR NAVBAR FROM 500PX TO 0PX */

@media (max-width: 500px) {
  .illu {
    width: 330px;
  }

  .section1 h1 {
    font-size: 25px;
    line-height: 35px;
    padding: 0 20px;
  }

  .section1 p {
    font-size: 16px;
    line-height: 25px;
    padding: 0 19px;
  }

  .wavedesk {
    display: none;
  }

  .wavemob {
    display: inline;
    position: absolute;
    left: 0;
    max-width: 500px;
    width: 100%;
    top: 240px;
    /* bottom: 0; */
  }
  /* button is fine, so we move to section 2. If it was not fine, you do a padding */

  .bk_2 {
    max-width: 500px;
    width: 100%;
    height: 400px;
    background-color: var(--dark-blue-2);
    position: absolute;
    bottom: -170px;
  }
}

/* ====================SECTION 2====================================== */

.section2 {
  /* border: 1-x solid red; */
  background-color: var(--dark-blue-2);
  margin-top: 170px;
}

.grid_container {
  /* border: 1px dotted green; ; doing this to see the accurate size when building but not to be applied */
  max-width: 800px;
  margin: auto;
  /* Display grid allows us to use all ppty called the grid template column */
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 60px;
}

.grid_container div {
  color: var(--white);
  text-align: center;
  /* border: 1px solid white; ; doing this to see the accurate size when building but not to be applied */
  max-width: 370px;
  margin: auto;
}

.grid_container div p {
  font-size: 14px;
  margin-top: 10px;
}

.grid_container div img {
  width: 70px;
  height: 80px;
}

.grid_container div h3 {
  margin-top: 20px;
}

/* MEDIA QUERY FOR SECTION 2 FROM 500PX TO 0PX */

@media (max-width: 500px) {
  .grid_container {
    grid-template-columns: 1fr;
  }

  .grid_container div p {
    padding: 0 25px;
  }

  .grid_container div img {
    width: 50px;
    height: 55px;
  }
}
/* ==================================================== */

.section3 {
  background-color: var(--dark-blue-2);
  color: var(--white);
  /* border: 1px solid white; */
  padding-top: 150px;
}

.section3_container {
  display: flex;
  align-items: center;
  gap: 60px;
  /* border: 1px dotted gold; */
  max-width: 1150px;
  margin: auto;
}

.section3_container h2 {
  font-size: 40px;
}

.section3_container p {
  font-size: 14px;
  margin-top: 20px;
  padding-right: 0;
}

.sec3_link {
  margin-top: 20px;
  border-bottom: 1.5px solid var(--Cyan);
  width: 165px;
  padding-bottom: 3px;
  display: flex;
  align-items: center;
  gap: 3px;
}

.sec3_link a {
  text-decoration: none;
  color: var(--Cyan);
}

.sec3_link a:hover {
  color: var(--white);
}

.sec3_link:hover {
  border-bottom: 1.5px solid var(--white);
}

/* MEDIA QUERY FOR SECTION 3 FROM 500PX TO 0PX */
@media (max-width: 500px) {
  .section3_container img {
    width: 330px;
  }

  .section3_container {
    flex-direction: column;
    align-items: center;
    max-width: 330px;
  }

  .section3_container h2 {
    font-size: 20px;
  }

  .sec3_link {
    width: 170px;
  }

  .sec3_link img {
    width: 20px;
  }
}

/* ==========SECTION4========== */
.section4 {
  background-color: var(--dark-blue-2);
  color: var(--white);
  position: relative;
}

.test_con {
  display: flex;
  padding-top: 150px;
  max-width: 1100px;
  margin: auto;
  gap: 30px;
  position: relative;
}

.eachtest {
  background-color: var(--dark-blue-4);
  padding: 40px 20px 20px 20px;
  border-radius: 5px;
}

.innerdiv img {
  width: 30px;
  /* To make a perfect circle from a box shaped container or image. use border raduius 50% instead of px */
  border-radius: 50%;
}

.innerdiv {
  display: flex;
  gap: 15px;
  align-items: center;
  margin-top: 20px;
}

.innerdiv small {
  font-size: 10px;
  color: whitesmoke;
  font-weight: 300;
}

.eachtest p {
  padding-right: 20px;
  line-height: 22px;
  font-size: 14px;
}

.quote {
  position: relative;
  top: 160px;
  left: 70px;
}

/* MEDIA QUERY FOR SECTION 4 FROM 500PX TO 0PX */

@media (max-width: 500px) {
  .test_con {
    flex-direction: column;
    max-width: 300px;
    text-align: center;
    justify-content: center;
  }

  .eachtest {
    padding: 20px;
  }

  .eachtest p {
    font-size: 10px;
  }

  .quote {
    width: 30px;
    left: 35px;
    top: 158px;
  }
}
/* =======SECTION 5========= */

.section5 {
  background-color: var(--dark-blue-2);
  color: var(--white);
  padding-top: 300px;
  /* This will make it stay in one place, and build a wall around getearly, that way whatever we do with getearly stays within section5 */
  position: relative;
}

.getearly {
  background-color: var(--dark-blue-1);
  max-width: 820px;
  margin: auto;
  border-radius: 8px;
  padding: 40px 60px;
  text-align: center;
  /* For align items, you have to do display flex first. But for text align, you do not need to display flex first. */
  position: absolute;
  /* position absolute means it can fly anywhere */
  bottom: -100px;
  /* Left and right with % will make it adjust to your screen size. Px keeps it fixed */
  left: 10%;
  right: 10%;
}

.getearly p {
  margin: 20px 0;
  line-height: 25px;
  /* becos you have aligned items to center, you have to do padding from both left and right sides if you want to shift words */
  padding: 0 60px;
  font-size: 14px;
}

.form {
  display: flex;
  justify-content: center;
  gap: 25px;
}

.form input {
  padding: 10px 30px;
  /* we use width and not padding right here, so whatever text you put in theform can stretch till the end */
  width: 450px;
  border-radius: 40px;
  border: none;
}

.form input::placeholder {
  /* To change anything inside placeholder, this is the format above */
  font-size: 12px;
  color: rgb(225, 220, 220);
}

.form button {
  padding: 10px 30px;
  background-color: var(--blue);
  color: var(--white);
  border-radius: 25px;
  border: none;
  cursor: pointer;
}

.form button:hover {
  background-color: var(--Cyan);
}

/* MEDIA QUERY FOR SECTION 5 FROM 500PX TO 0PX */

@media (max-width: 500px) {
  .getearly {
    max-width: 350px;
    left: 5%;
    right: 5%;
    bottom: -170px;
    padding: 40px 20px;
  }

  .getearly h2 {
    font-size: 20px;
  }

  .getearly p {
    padding: 0 16.2px;
  }

  .form {
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .form input {
    width: 305px;
  }

  .form button {
    padding: 12px 75px;
  }
}

/* =========FOOTER=========== */
footer {
  background-color: var(--dark-blue-3);
  color: var(--white);
  /* border: 3px solid green; */
}

.mainfooter {
  max-width: 1200px;
  margin: auto;
  padding: 150px 0;
  /* border: 3px solid gold; */
}

.innerfooter {
  /* border: 3px solid red; */
  display: grid;
  grid-template-columns: 3fr 2fr 1fr 1fr 1fr;
  margin-top: 20px;
}

/* HOW TO CALL OUT MANY CLASSES OF HTML, TO GIVE IT SAME PPTY
.foot1,
.foot2,
.foot3,
.foot4,
.foot5 {
  /* border: 3px solid white; */

.foot1 {
  display: flex;
  align-items: start;
  gap: 20px;
}

.foot1 p {
  padding-right: 70px;
  line-height: 22px;
  font-size: 14px;
}

.foot2 {
  display: flex;
  /* On default, display flex is a row. To make it back as column; you use flex direction; column */
  flex-direction: column;
  gap: 20px;
}

.foot2 div {
  display: flex;
  gap: 20px;
}

.foot2 div p {
  font-size: 14px;
}

.foot3 {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.foot3 a {
  text-decoration: none;
  color: var(--white);
  font-size: 14px;
}

.foot3 a:hover {
  font-weight: 700;
}

.foot4 {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.foot4 a {
  text-decoration: none;
  color: var(--white);
  font-size: 14px;
}

.foot4 a:hover {
  font-weight: 700;
}

.foot5 {
  display: flex;
  /* To move the images to the other end of the page */
  justify-content: end;
  /* To make images smaller back, you align them */
  align-items: start;
  gap: 15px;
}

/* MEDIA QUERY FOR FOOTER FROM 500PX TO 0PX */
@media (max-width: 500px) {
  .mainfooter {
    max-width: 330px;
    padding-top: 250px;
    padding-bottom: 50px;
  }

  .innerfooter {
    grid-template-columns: 1fr;
    gap: 20px;
  }

  .foot2 {
    margin-bottom: 50px;
  }
  .foot3 {
    margin-bottom: 30px;
  }

  .foot4 {
    margin-bottom: 50px;
  }

  .foot5 {
    justify-content: center;
  }
}
